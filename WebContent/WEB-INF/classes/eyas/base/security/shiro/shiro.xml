<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Define the realm you want to use to connect to your back-end security 
		datasource: -->
	<bean id="myRealmCredentialsMatcher" class="org.apache.shiro.authc.credential.Sha256CredentialsMatcher">
		 
	</bean>
	<bean id="myRealm" class="eyas.base.security.shiro.SimpleCustomRealm">
		<property name="userService" ref="userServiceImpl"></property>
		<property name="credentialsMatcher" ref="myRealmCredentialsMatcher"></property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.mgt.DefaultSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property 
			instead. -->
		<property name="realm" ref="myRealm" />
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- For simplest integration, so that all SecurityUtils.* methods work 
		in all cases, -->
	<!-- make the securityManager bean a static singleton. DO NOT do this in 
		web -->
	<!-- applications - see the 'Web Applications' section below instead. -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
</beans>